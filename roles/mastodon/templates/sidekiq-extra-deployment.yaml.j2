kind: Deployment
apiVersion: apps/v1
metadata:
  name: '{{ ansible_operator_meta.name }}-mastodon-sidekiq-extra'
  namespace: '{{ ansible_operator_meta.namespace }}'
spec:
  replicas: {{ extra_sidekiq_replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: mastodon
      app.kubernetes.io/instance: '{{ ansible_operator_meta.name }}'
      app.kubernetes.io/part-of: mastodon-operator
      app.kubernetes.io/managed-by: kustomize
      app.kubernetes.io/created-by: mastodon-operator
      app.kubernetes.io/component: sidekiq-extra
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mastodon
        app.kubernetes.io/instance: '{{ ansible_operator_meta.name }}'
        app.kubernetes.io/part-of: mastodon-operator
        app.kubernetes.io/managed-by: kustomize
        app.kubernetes.io/created-by: mastodon-operator
        app.kubernetes.io/component: sidekiq-extra
    spec:
      containers:
        - name: mastodon-sidekiq-extra
          image: '{{ image }}'
          imagePullPolicy: Always
          command:
            - bundle
            - exec
            - sidekiq
            - -c
            - '{{ extra_sidekiq_threads }}'
            - -q
            - default
            - -q
            - push
            - -q
            - mailers
            - -q
            - pull
            - -q
            - ingress
          envFrom:
            - configMapRef:
                name: '{{ ansible_operator_meta.name }}-mastodon-config'
            - secretRef:
                name: '{{ ansible_operator_meta.name }}-mastodon-secret'
{% if not s3_enabled %}
          volumeMounts:
            - name: mastodon-system
              mountPath: /opt/mastodon/public/system
      volumes:
        - name: mastodon-system
          persistentVolumeClaim:
            claimName: '{{ ansible_operator_meta.name }}-mastodon-system'
{% endif %}